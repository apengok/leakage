# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-18 06:16
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Amrsparam',
            fields=[
                ('paramkey', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('paramvalue', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'amrsparam',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmDeviceType',
            fields=[
                ('typename', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('tablename', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'dm_device_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmEnumConfig',
            fields=[
                ('tablename', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('fieldname', models.CharField(max_length=100)),
                ('itemid', models.IntegerField()),
                ('itemcaption', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'dm_enum_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmFieldsConfig',
            fields=[
                ('tablename', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('fieldname', models.CharField(max_length=100)),
                ('fieldcaption', models.CharField(blank=True, max_length=100, null=True)),
                ('fieldlength', models.IntegerField(blank=True, null=True)),
                ('fieldtype', models.IntegerField()),
                ('fieldisrequired', models.CharField(max_length=1)),
                ('fieldisunique', models.CharField(blank=True, max_length=1, null=True)),
                ('fieldisprimary', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'dm_fields_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmGlobalDevice',
            fields=[
                ('deviceid', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(max_length=100)),
                ('parent_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'dm_global_device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlowShareDayTax',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('readtime', models.CharField(max_length=20)),
                ('simid', models.CharField(max_length=20)),
                ('flux', models.FloatField(blank=True, null=True)),
                ('plustotalflux', models.FloatField(blank=True, null=True)),
                ('reversetotalflux', models.FloatField(blank=True, null=True)),
                ('warning', models.CharField(max_length=50)),
                ('warningdesc', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'flow_share_day_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layername', models.CharField(max_length=200)),
                ('tablename', models.CharField(max_length=200)),
                ('layerdesc', models.CharField(blank=True, max_length=250, null=True)),
                ('fastquery', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaDlzxc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_dlzxc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaDmdc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_dmdc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaDmxc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_dmxc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaDwjcdc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_dwjcdc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaFzdc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_fzdc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaFzxc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_fzxc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaGxdc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_gxdc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaGxxc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_gxxc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaJmddc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_jmddc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaJmdmc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_jmdmc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaJmdxc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_jmdxc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaJtdc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_jtdc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaJtmc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_jtmc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaJtxc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_jtxc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaMczjc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_mczjc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxdc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sxdc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsConcentrator',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_concentrator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsConnector',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_connector',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsDrainValve',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_drain_valve',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsExEquipment',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_ex_equipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsFireHydrant',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_fire_hydrant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsFlowMeter',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_flow_meter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsForcePump',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_force_pump',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsMetabox',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_metabox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsPipe',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_pipe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsSourceWater',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_source_water',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsValve',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_valve',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsValveWell',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_valve_well',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsVentValve',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_vent_valve',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsWaterMeter',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_water_meter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxGsWsWatermeterBasin',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.GeometryField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_gs_ws_watermeter_basin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxmc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sxmc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxQdzdtMapLayer',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sx_qdzdt_map_layer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxxc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sxxc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaSxzxc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_sxzxc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaZbdc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_zbdc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaZbmc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_zbmc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GCloudlayerMetaZbxc',
            fields=[
                ('metaid', models.IntegerField(primary_key=True, serialize=False)),
                ('metaname', models.CharField(blank=True, max_length=200, null=True)),
                ('bounds_size', models.FloatField(blank=True, null=True)),
                ('blockdata', models.BinaryField(blank=True, null=True)),
                ('bounds_geom', django.contrib.gis.db.models.fields.PolygonField(srid=0)),
                ('geomdata', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('geomjson', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=20, null=True)),
                ('user_define', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'g_cloudlayer_meta_zbxc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hdbrecord',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('hdate', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'hdbrecord',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HdbTianhouBig',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('rvalue', models.CharField(blank=True, max_length=30, null=True)),
                ('fvalue', models.CharField(blank=True, max_length=30, null=True)),
                ('meterstate', models.CharField(blank=True, max_length=30, null=True)),
                ('commstate', models.CharField(blank=True, max_length=30, null=True)),
                ('rtime', models.CharField(blank=True, max_length=30, null=True)),
                ('lastrvalue', models.CharField(blank=True, max_length=30, null=True)),
                ('lastrtime', models.CharField(blank=True, max_length=30, null=True)),
                ('dosage', models.CharField(blank=True, max_length=30, null=True)),
                ('user_watermeter_id', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'hdb_tianhou_big',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PressShareDayTax',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('readtime', models.CharField(max_length=20)),
                ('simid', models.CharField(max_length=20)),
                ('pressure', models.FloatField(blank=True, null=True)),
                ('warning', models.CharField(max_length=50)),
                ('warningdesc', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'press_share_day_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserWatermeter',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('numbersth', models.CharField(blank=True, max_length=30, null=True)),
                ('roomname', models.CharField(blank=True, max_length=128, null=True)),
                ('nodeaddr', models.CharField(blank=True, max_length=30, null=True)),
                ('wateraddr', models.CharField(blank=True, max_length=30, null=True)),
                ('rvalue', models.CharField(blank=True, max_length=30, null=True)),
                ('metertype', models.CharField(blank=True, max_length=30, null=True)),
                ('fvalue', models.CharField(blank=True, max_length=30, null=True)),
                ('meterstate', models.CharField(blank=True, max_length=30, null=True)),
                ('commstate', models.CharField(blank=True, max_length=30, null=True)),
                ('rtime', models.CharField(blank=True, max_length=30, null=True)),
                ('lastrvalue', models.CharField(blank=True, max_length=30, null=True)),
                ('lastrtime', models.CharField(blank=True, max_length=30, null=True)),
                ('dosage', models.CharField(blank=True, max_length=30, null=True)),
                ('islargecalibermeter', models.IntegerField(blank=True, null=True)),
                ('metering_equipment_id', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'user_watermeter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsConcentrator',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('community', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('commdev', models.CharField(blank=True, max_length=30, null=True)),
                ('devaddr', models.CharField(blank=True, max_length=30, null=True)),
                ('commmodel', models.CharField(blank=True, max_length=64, null=True)),
                ('commparam', models.CharField(blank=True, max_length=64, null=True)),
                ('tel', models.CharField(blank=True, max_length=30, null=True)),
                ('netparam', models.CharField(blank=True, max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=32, null=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_concentrator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsConnector',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_connector',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsDrainValve',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_drain_valve',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsExEquipment',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_ex_equipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsExResourceProperty',
            fields=[
                ('tablename', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('fieldname', models.CharField(max_length=128)),
                ('fieldtype', models.IntegerField(blank=True, null=True)),
                ('fieldlength', models.IntegerField(blank=True, null=True)),
                ('caption', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('enabled', models.IntegerField(blank=True, null=True)),
                ('mapping_column_no', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ws_ex_resource_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsExResourcePropertyEnumDefine',
            fields=[
                ('tablename', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('fieldname', models.CharField(max_length=128)),
                ('enumvalue', models.IntegerField()),
                ('enumcaption', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'ws_ex_resource_property_enum_define',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsExResourceType',
            fields=[
                ('tablename', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('caption', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ws_ex_resource_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsFireHydrant',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_fire_hydrant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsFlowMeter',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('simid', models.CharField(blank=True, max_length=20, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_flow_meter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsForcePump',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_force_pump',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsMetabox',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('buildingno', models.CharField(blank=True, max_length=128, null=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('concentrator_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ws_metabox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsPipe',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('pipe_first', models.CharField(blank=True, max_length=20, null=True)),
                ('pipe_end', models.CharField(blank=True, max_length=20, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('buried', models.FloatField(blank=True, null=True)),
                ('start_depth', models.FloatField(blank=True, null=True)),
                ('end_depth', models.FloatField(blank=True, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('start_altitude', models.FloatField(blank=True, null=True)),
                ('end_altitude', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_pipe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsPipeType',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'ws_pipe_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsProjectInfo',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=64)),
                ('project_name', models.CharField(max_length=255)),
                ('manager_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('area', models.CharField(blank=True, max_length=255, null=True)),
                ('completion_time', models.CharField(blank=True, max_length=20, null=True)),
                ('measurement_unit', models.CharField(blank=True, max_length=64, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('input_staff_id', models.CharField(blank=True, max_length=32, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('minx', models.FloatField(blank=True, null=True)),
                ('miny', models.FloatField(blank=True, null=True)),
                ('maxx', models.FloatField(blank=True, null=True)),
                ('maxy', models.FloatField(blank=True, null=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff_id', models.CharField(blank=True, max_length=32, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ws_project_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsProjectMeasurementRecord',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('project_id', models.CharField(max_length=32)),
                ('equipement_id', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ws_project_measurement_record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsResource',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('tablename', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'ws_resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsSourceWater',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_source_water',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsUserOpCascadeLog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('op_mode', models.IntegerField(blank=True, null=True)),
                ('topo_old', models.CharField(blank=True, max_length=62, null=True)),
                ('topo_old_points', models.CharField(blank=True, max_length=255, null=True)),
                ('topo_new', models.CharField(blank=True, max_length=62, null=True)),
                ('topo_new_points', models.CharField(blank=True, max_length=255, null=True)),
                ('attr_id', models.CharField(blank=True, max_length=20, null=True)),
                ('attr_tablename', models.CharField(blank=True, max_length=128, null=True)),
                ('meta_id', models.IntegerField(blank=True, null=True)),
                ('meta_tablename', models.CharField(blank=True, max_length=128, null=True)),
                ('op_cascade_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ws_user_op_cascade_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsValve',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_valve',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsValveWell',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_valve_well',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsVentValve',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_vent_valve',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsWaterMeter',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_water_meter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WsWatermeterBasin',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('input_time', models.CharField(blank=True, max_length=20, null=True)),
                ('input_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('modify_time', models.CharField(blank=True, max_length=20, null=True)),
                ('modify_staff', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.FloatField(blank=True, null=True)),
                ('location_y', models.FloatField(blank=True, null=True)),
                ('memo', models.CharField(blank=True, max_length=256, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('caliber', models.FloatField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=256, null=True)),
                ('burying', models.CharField(blank=True, max_length=256, null=True)),
                ('angle', models.FloatField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('road', models.CharField(blank=True, max_length=256, null=True)),
                ('unit', models.CharField(blank=True, max_length=256, null=True)),
                ('project_ref_count', models.IntegerField(blank=True, null=True)),
                ('op_vaild', models.IntegerField(blank=True, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('external_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ws_watermeter_basin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlarmShareDayTax',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('readtime', models.CharField(max_length=20)),
                ('simid', models.CharField(max_length=20)),
                ('flux', models.FloatField(blank=True, null=True)),
                ('totalflux', models.FloatField(blank=True, null=True)),
                ('pressure', models.FloatField(blank=True, null=True)),
                ('warning', models.CharField(max_length=50)),
                ('warningdesc', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'alarm_share_day_tax',
                'managed': True,
            },
        ),
    ]
