# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-14 08:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Wbalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('totoal_in', models.FloatField(blank=True, null=True)),
                ('auth_use', models.FloatField(blank=True, null=True)),
                ('loss', models.FloatField(blank=True, null=True)),
                ('charge_auth', models.FloatField(blank=True, null=True)),
                ('uncharge_auth', models.FloatField(blank=True, null=True)),
                ('charge_measure', models.FloatField(blank=True, null=True)),
                ('charge_unmeasure', models.FloatField(blank=True, null=True)),
                ('uncharge_measure', models.FloatField(blank=True, null=True)),
                ('uncharge_unmeasure', models.FloatField(blank=True, null=True)),
                ('apparent_loss', models.FloatField(blank=True, null=True)),
                ('actual_loss', models.FloatField(blank=True, null=True)),
                ('unauth_use', models.FloatField(blank=True, null=True)),
                ('statistic_error', models.FloatField(blank=True, null=True)),
                ('money_back', models.FloatField(blank=True, null=True)),
                ('money_waste', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wbalance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmaZone',
            fields=[
                ('dma_id', models.IntegerField(primary_key=True, serialize=False)),
                ('zone_name', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('zone_area', models.FloatField(blank=True, null=True)),
                ('zone_water_in', models.FloatField(blank=True, null=True)),
                ('registed_user', models.FloatField(blank=True, null=True)),
                ('pipeline_length', models.FloatField(blank=True, null=True)),
                ('sub_zone_num', models.FloatField(blank=True, null=True)),
                ('dma_num', models.FloatField(blank=True, null=True)),
                ('measure_per_actual', models.FloatField(blank=True, null=True)),
                ('measure_precision', models.FloatField(blank=True, null=True)),
                ('zone_sale', models.FloatField(blank=True, null=True)),
                ('nightflow_min', models.FloatField(blank=True, null=True)),
                ('online_presspoint_num', models.FloatField(blank=True, null=True)),
                ('online_flowmeter_num', models.FloatField(blank=True, null=True)),
                ('online_water_quality_m_num', models.FloatField(blank=True, null=True)),
                ('charge_watermeter_num', models.FloatField(blank=True, null=True)),
                ('charge_waterwater_percent', models.FloatField(blank=True, null=True)),
                ('zone_detect_leak_num', models.FloatField(blank=True, null=True)),
                ('leak_water', models.FloatField(blank=True, null=True)),
                ('leak_obscur_water', models.FloatField(blank=True, null=True)),
                ('leak_obvious_water', models.FloatField(blank=True, null=True)),
                ('leak_rate', models.FloatField(blank=True, null=True)),
                ('pressure_quality', models.FloatField(blank=True, null=True)),
                ('water_quality', models.FloatField(blank=True, null=True)),
                ('zone_inner_pressure', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dmazone',
            },
        ),
        migrations.CreateModel(
            name='ZoneTree',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('zone_level', models.IntegerField(blank=True, choices=[(1, 'level 1'), (2, 'level 2'), (3, 'level 3'), (4, 'level 4')], null=True)),
                ('zone_name', models.CharField(blank=True, max_length=256, null=True, unique=True)),
                ('parent_level', models.CharField(blank=True, max_length=256, null=True)),
                ('href', models.CharField(blank=True, max_length=256, null=True, unique=True)),
            ],
            options={
                'db_table': 'zonetree',
            },
        ),
        migrations.AddField(
            model_name='dmazone',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dma.ZoneTree'),
        ),
    ]
